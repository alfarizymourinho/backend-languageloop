const { Materi } = require("../database/models");
const multer = require("multer");
const path = require("path");

const storage = multer.diskStorage({
    destination: './upload/images',
    filename: (req, file, cb) => {
        const uniqueFilename = `${file.fieldname}_${Date.now()}${path.extname(file.originalname)}`;
        cb(null, uniqueFilename);
    }
});

const upload = multer({
    storage: storage,
    limits: {
        fileSize: 10000000 // Batasan ukuran file dalam byte (di sini 10 MB)
    }
});

exports.create = async (req, res) => {
    try {
        upload.single('materi')(req, res, async function (err) {
            if (err) {
                console.error(err);
                return res.status(400).json({
                    success: false,
                    message: 'Gagal mengupload materi!',
                });
            }

            // Pastikan semua field yang diperlukan diisi
            const { jenjang, tanggal, judul, isi } = req.body;
            const { filename } = req.file;

            if (!jenjang || !tanggal || !judul || !isi || !filename) {
                return res.status(400).json({
                    success: false,
                    message: 'Harap lengkapi semua field yang diperlukan!',
                });
            }

            const data = {
                jenjang: jenjang,
                tanggal: tanggal,
                judul: judul,
                isi: isi,
                materi: filename,
            };

            // Tambahkan data ke dalam tabel Materi
            const createdMateri = await Materi.create(data);

            res.status(201).json({
                success: true,
                message: 'Data materi berhasil ditambahkan!',
                data: createdMateri,
            });
        });
    } catch (error) {
        console.error(error);
        res.status(500).json({
            success: false,
            message: error.message || "Gagal menambahkan data materi!",
        });
    }
};



exports.findAll = (req, res) => {
    Materi.findAll()
        .then((materis) => {
            res.json({
                success: true,
                message: "Berhasil menampilkan materi!",
                data: materis,
            });
        })
        .catch((err) => {
            console.info(err);
            res.status(500).json({
                success: false,
                message: err.message || "Gagal menampilkan materi!.",
                data: null,
            });
        });
};

exports.update = async (req, res) => {
    try {
        const id_materi = req.params.id;

        const materiData = {
            jenjang: req.body.jenjang,
            tanggal: req.body.tanggal,
            judul: req.body.judul,
            isi: req.body.isi,
        };

        if (req.file) {
            materiData.materi = req.file.filename;
        }

        await Materi.update(materiData, {
            where: { id: id_materi },
        });

        res.json({
            success: true,
            message: 'Berhasil update materi!',
            data: materiData,
        });
    } catch (error) {
        res.status(500).json({
            success: false,
            message: error.message || "Gagal update materi!",
            data: null,
        });
    }
};

exports.delete = async (req, res) => {
    try {
        const id_materi = req.params.id;

        await Materi.destroy({
            where: { id: id_materi },
        });

        res.json({
            success: true,
            message: 'Berhasil hapus materi!',
            data: req.body,
        });
    } catch (error) {
        res.status(500).json({
            success: false,
            message: error.message || "Gagal hapus materi!",
            data: null,
        });
    }
};

exports.findOne = (req, res) => {
    const id_materi = req.params.id;
    Materi.findByPk(id_materi)
        .then((materi) => {
            if (materi) {
                res.json({
                    success: true,
                    message: "Berhasil menemukan materi!",
                    data: materi,
                });
            } else {
                res.status(404).json({
                    success: false,
                    message: "Materi tidak ditemukan.",
                    data: null,
                });
            }
        })
        .catch((err) => {
            res.status(500).json({
                success: false,
                message: err.message || "Gagal menampilkan materi!",
                data: null,
            });
        });
};
